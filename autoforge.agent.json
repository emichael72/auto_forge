{
    "_meta":{
        "version":"1.0",
        "file":"autoforge.agent.json",
        "description":"This file defines the static, solution-agnostic metadata for the AutoForge build system. It provides AI agents and tools with the necessary instructions to understand how to install, invoke, and interact with AutoForge.",
        "usage":[
            "Acts as an entry point for agents seeking to automate or introspect AutoForge.",
            "Declares operation modes such as workspace creation, metadata generation, and automation entry points.",
            "Provides consistent placeholder-based references to avoid hardcoded URLs or paths.",
            "Must be read before workspace-specific metadata (e.g., `.autoforge/agent_metadata.json`) is available."
        ],
        "location":"This file is located in the root of the AutoForge package repository, alongside pyproject.toml.",
        "comment_format":"jsonc (agents should treat file as opaque and call AutoForge CLI for structured data)",
        "schema":"TBD - this file structure is designed to be declarative, but may be validated in future against a formal JSON schema."
    },
    "_notes":{
        "placeholders":{
            "<repository_url>":"This is replaced by the value of the 'repository_url' field defined above.",
            "<solution_name>":"This is resolved by parsing the `solution_name` field in the loaded solution.jsonc file.",
            "<workspace_path>":"Path to the workspace folder created by the create_workspace operation. It is passed by the user or derived during bootstrap."
        }
    },
    "tool_name":"AutoForge",
    "description":"Modular AI-integrated build automation for multi-profile projects. Uses metadata from a solution JSONC file to instantiate a workspace, build various artifacts, and test them.",
    "repository_url":"https://github.com/emichael72",
    "readme":"<repository_url>/blob/main/src/auto_forge/resources/help/package/about.md",
    "type":"Python package installable via pip",
    "host_requirements":{
        "os":"Linux",
        "supported_distros":[
            "Fedora",
            "Ubuntu",
            "WSL (Ubuntu)"
        ]
    },
    "configuration_files":{
        "solution":{
            "description":"JSONC file containing metadata required for successfully building one or more artifacts.",
            "mandatory":true,
            "readme":"<repository_url>/blob/main/src/auto_forge/resources/help/solution/guide.md",
            "structure_note":"Similar to a Visual Studio solution  defines a parent solution with derived projects, each with toolchains and configurations.",
            "example":"<repository_url>/blob/main/src/auto_forge/resources/samples/userspace/solution.jsonc"
        },
        "sequence":{
            "description":"JSONC file with ordered instructions for creating a workspace  e.g., fetching sources, packages, toolchains.",
            "mandatory":false,
            "readme":"<repository_url>/blob/main/src/auto_forge/resources/help/package/sequence.md",
            "example":"<repository_url>/blob/main/src/auto_forge/resources/samples/userspace/workspace_sequence.jsonc"
        },
        "variables":{
            "description":"JSONC file containing user-defined variables referenced by the solution.",
            "mandatory":false,
            "example":"<repository_url>/blob/main/src/auto_forge/resources/samples/userspace/variables.jsonc"
        }
    },
    "entry_point":{
        "description":"Use `bootstrap.sh` from the package repository to install AutoForge locally and execute it with the required solution parameters.",
        "script":"<repository_url>/raw/main/src/auto_forge/resources/shared/bootstrap.sh",
        "arguments":[
            "-w, --workspace [path]      Destination workspace path.",
            "-n, --name [name]           Solution name to use.",
            "-p, --package [path/url]    Solution package to use (local path or URL).",
            "-s, --sequence [name]       Sequence file to use when preparing new workspace.",
            "-u, --url [url]             Optional override for AutoForge package URL.",
            "-h, --help                  Display this help and exit."
        ]
    },
    "operation_modes":[
        {
            "name":"create_workspace",
            "description":"Follow steps defined in a sequence file to create a workspace for a solution.",
            "example":{
                "description":"Example command using GitHub token and curl to bootstrap AutoForge with the '<solution_name>' sample solution.",
                "command":[
                    "GITHUB_TOKEN=$(dt github print-token <repository_url>)",
                    "",
                    "curl -sSL \\",
                    "  -H \"Authorization: token ${GITHUB_TOKEN}\" \\",
                    "  -H \"Cache-Control: no-store\" \\",
                    "  \"<repository_url>/raw/main/src/auto_forge/resources/shared/bootstrap.sh\" \\",
                    "  | bash -s -- \\",
                    "      -n <solution_name> \\",
                    "      -w <workspace_path> \\",
                    "      -s workspace_sequence \\",
                    "      -p \"<workspace_path>/<solution_name>\""
                ]
            },
            "results":{
                "virtual_python":{
                    "description":"Each workspace has its own Python virtual environment with AutoForge and its dependencies installed.",
                    "path":"<workspace_path>/.venv"
                },
                "invocation_script":{
                    "description":"`env.sh` is added to the workspace to source the Python virtual environment and invoke the AutoForge package.",
                    "path":"<workspace_path>/env.sh"
                },
                "solution_resources":{
                    "description":"Contains the solution sources, scripts, JSONs, and other resources defined by the sequence file.",
                    "path":"<workspace_path>/<solution_name>",
                    "note":"`solution_name` is a mandatory property in the solution JSON."
                },
                "config_file":{
                    "description":"Auto-generated shell config file that stores solution metadata for `env.sh` to use.",
                    "path":"<workspace_path>/.config",
                    "example":[
                        "# Please do not remove or edit.",
                        "# File was auto-generated by AutoForge solution installer.",
                        "solution_name=<solution_name>",
                        "install_date=2025-07-07T12:28:07"
                    ]
                }
            }
        },
        {
            "name":"user_interactive_shell",
            "description":"Start AutoForge shell (cmd2 + prompt_toolkit) for manual interaction with the build system.",
            "dependency":"Requires a prepared workspace and a solution JSON.",
            "example":{
                "command":"<workspace_path>/env.sh"
            }
        },
        {
            "name":"automatic_non_interactive",
            "description":"Run a predefined command from the solution non-interactively and print output to the shell.",
            "dependency":"Requires an installed, functional workspace.",
            "example":{
                "command":"<workspace_path>/env.sh --run_command help"
            }
        },
        {
            "name":"meta_data_generation",
            "description":"Agent helper that generates a JSON summary of the workspace, including everything required to invoke builds and run tests.",
            "dependency":"Requires an installed, functional workspace.",
            "example":{
                "command":"<workspace_path>/env.sh --run_command ai_context_gen"
            },
            "outputs":{
                "file":"<workspace_path>/.autoforge/agent_metadata.json",
                "contains":[
                    "build profiles",
                    "test commands",
                    "toolchain details",
                    "output artifacts",
                    "all valid run_command entries"
                ]
            }
        }
    ],
    "agent_entry":{
        "primary_action":"create_workspace",
        "introspect_after":"meta_data_generation",
        "next_suggestions":[
            "build",
            "test.<target>"
        ]
    }
}