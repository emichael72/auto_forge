# Script:       pyproject.toml
# Description:  auto_forge package configuration

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "auto_forge"
version = "0.1.2"
description = "AutoForge: Intel DevOps Bulid System"
readme = "README.md"
authors = [{ name = "Michaelson, Eitan", email = "eitan.michaelson@intel.com" }]
license = { file = "LICENSE" }
classifiers = ["Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux"]
requires-python = ">=3.9"  # Requires Python 3.9 or later
# NOTE: tkinter is required but must be installed via system package manager.
dependencies = [
    "packaging>=20.0",
    "wheel==0.43.0",
    "opentelemetry-api==1.24.0",
    "opentelemetry-sdk==1.24.0",
    "colorama>=0.4.6",
    "rich>=13.7,<14.0",
    "tabulate==0.9.0",
    "pyfiglet>=0.8.post1",
    "psutil>=5.9",
    "toml==0.10.2",
    "gitpython>=3.1.40",
    "jsonpath-ng>=1.5.3",
    "json5==0.9.14",
    "jsonschema>=4.21.1",
    "pyaml==23.12.0",
    "ruamel.yaml>=0.18.6",
    "GitPython>=3.1.40",
    "prompt_toolkit>=3.0.43,<4.0.0",
    "jmespath>=0.10.0,<1.0.0",
    "textual>=3.3.0",
    "pynput>=1.8.1,<2.0",
    "openai==1.30.5",
    "cryptography>=45.0.0",
    "cmd2==2.3.3"]

[project.urls]
homepage = "https://github.com/emichael72/auto_forge.git"
repository = "https://github.com/emichael72/auto_forge.git"

[project.scripts]
autoforge = "auto_forge.__main__:main"

[tool.setuptools]
platforms = ["linux"]
package-dir = { "" = "src" }
packages = ["auto_forge",
    "auto_forge.core",
    "auto_forge.core.interfaces",
    "auto_forge.core.protocols",
    "auto_forge.common",
    "auto_forge.commands",
    "auto_forge.builders",
    "auto_forge.builders.analyzers"
]

# Extended package properties should only be placed here to ensure compliance with PEP 621.
[tool.autoforge_metadata]
fancy_name = "AutoForge"

#
# Ruff: Fast Python linter & formatter
#
# This section configures Ruff for static analysis and code formatting.
# - [tool.ruff]: General settings like line length and Python target version.
# - [tool.ruff.lint]: Enabled/ignored rule categories for code linting.
# - [tool.ruff.lint.isort]: Sorting behavior for imports (grouping, ordering).
# - [tool.ruff.lint.per-file-ignores]: Exceptions for specific files.
#
# For reference: https://docs.astral.sh/ruff/configuration/
#

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["F", "E", "W", "B", "C90", "I", "UP", "SIM", "TID", "ARG", "N", "RUF"]

# Ignore Ruff import-sorting warnings (I001) for this file,
# as we intentionally follow PyCharm's sorting logic instead.

ignore = ["E501", "D203", "D213", "RUF100", "I001"]

# This raises the McCabe complexity threshold from the default (10) to a more reasonable 16,
# reducing unnecessary warnings for well-contained but naturally complex logic.

[tool.ruff.lint.mccabe]
max-complexity = 16

[tool.ruff.lint.per-file-ignores]
"src/auto_forge/__init__.py" = ["I002"]

