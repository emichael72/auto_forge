/*
    AutoForge package internal configuration file.
    ----------------------------------------------

    Note:
    This script is formatted as JSON. A JSON preprocessor removes all comments before execution.
*/

{
    "format_of": "# @formatter:off", // Instruct PyCharm not to mess this file with its source formater.

    // List of variable names that must be defined in the "variables" section.
    // These are considered critical for proper project configuration.
    // Each entry in the "variables" array must include an object with a matching "name" field.
    // Validation will fail if any of these are missing.

    "essential_variables": [
        //                                                                                                         Path must Exist (default true)
        //   Key                    Value                                       Description                Crate path if not exist (default true)
	    //---------------------------------------------------------------------------------------------------------------------------------------

            ["AF_BASE",             "$HOME/.auto_forge",                        "AutoForge persistent directory"                                ],
            ["AF_BIN",              "$AF_BASE/bin",                             "AutoForge persistent binaries"                                 ],
            ["AF_TOOL_CHAINS",      "$AF_BASE/tool_chains",                     "AutoForge persistent tool-chains"                              ],
            ["AF_SOLUTION_BASE",    "$AF_BASE/$SOLUTION_NAME",                  "AutoForge persistent solution resources"                       ],
            ["AF_SOLUTION_BIN",     "$AF_SOLUTION_BASE/bin",                    "AutoForge persistent solution binaries"                        ],
            ["SOLUTION_BASE",       "$PROJ_WORKSPACE/$SOLUTION_NAME",           "Solution root directory"                                       ],
            ["BUILD_BASE",          "$PROJ_WORKSPACE/build",                    "Base path for compilers outputs"                               ],
            ["BUILD_OUT",           "$BUILD_BASE/out",                          "Compilation outputs and temporary files"                       ],
            ["BUILD_IMAGES",        "$BUILD_BASE/images",                       "Compiled binaries"                                             ],
            ["BUILD_LOGS",          "$BUILD_BASE/logs",                         "Runtime build logs"                                            ],
            ["EXTERN_BASE",         "$PROJ_WORKSPACE/externs",                  "Foreign non versioned resources"                               ],
            ["PYTHON_VENV",         "$PROJ_WORKSPACE/.venv",                    "Python virtual environment",         	        true, false	    ],
            ["PROJ_BASE",           "$PROJ_WORKSPACE/$SOLUTION_NAME",           "Project base path"                                             ],
            ["DOCS_BASE",           "$PROJ_BASE/docs",                          "Project Documents"                                             ],
            ["SCRIPTS_BASE",        "$PROJ_BASE/scripts",                       "Project scripts"                                               ],
            ["SCRIPTS_SOLUTION",    "$SCRIPTS_BASE/solution",                   "Solution JSON configuration files"                             ],
            ["SOURCE_BASE",         "$PROJ_BASE/src",                           "Sources base path"                                             ]
    ],


    "hide_cmd2_native_commands": false,                     // Hide cmd2 built-in commands from the user-facing menu
    "complete_while_typing": true,                          // Controls how aggressively prompt-toolkit attempts tab-completion while typing
    "prompt_history_file": "$AF_BASE/.auto_forge.history",  // Path to store persistent prompt-toolkit history
    "prompt_max_completion_results": 100,                   // Maximum number of tab-completion results; higher values may slow down completion in large directories
    "git_token_environment_var": "NONE",                    // Optional name of the environment variable that may hold the user's Git token
    "subprocess_execution_timout": 120.0,                   // Default timeout (in seconds) for subprocess execution; can be overridden via the shell_execute method
    "watchdog_timeout": 10.0,                               // Default timeout (in seconds) for subprocess execution; can be overridden via the shell_execute method

    // Expected location of solution files in an installed environment.
    // This variable is read during an early initialization stage, please avoid using any local variables
    // other than the workspace path and the solution name.

    "local_solution_package_files": "$PROJ_WORKSPACE/$SOLUTION_NAME/scripts/solution",

    // Search paths used when the prompt attempts to autocomplete a typed command.
    // This list typically mirrors the system's PATH variable and defines where
    // the prompt will look for executable binaries during command completion.

    "prompt_search_path": [
        "/usr/local/sbin",
        "/usr/local/bin",
        "/usr/sbin",
        "/usr/bin",
        "/sbin",
        "/bin",
        "/snap/bin",
        "$AF_BIN/",         // AutoForge persistent binaries path
        "$AF_SOLUTION_BIN", // AutoForge persistent solution specific binaries
        "$HOME/bin"
      ],

    "keywords_mapping": [

        // Defines placeholder-to-value mappings used for runtime substitution.
        // Placeholders in the form <keyword> will be replaced by their mapped values, if defined.
        // Each entry is a pair: [keyword (without angle brackets), replacement string].

        ["samples", "$AUTO_FORGE_PROJECT_SAMPLES_PATH"]
    ],

    "log_cleanup_patterns": [

        // log_cleanup_patterns:
        // This list defines regular expression patterns used to clean or filter noisy lines
        // from command output logs. Lines matching any of these patterns will be removed
        // before displaying logs to the user.

        "^remote: Counting objects:\\s*",
        "^━+.*?━+\\s*"
    ],

    "builtin_aliases": [

        // Built-in shell aliases that map shorthand commands to predefined behaviors.
        // Each entry includes:
        // - "alias_name": The shortcut or symbol used by the user (e.g., ".", "..").
        // - "target_command": The actual command that will be executed.
        // - "description": A user-friendly description (supports Unicode symbols).
        // - "command_type": A logical category or behavior group (e.g., "NAVIGATE", "EDIT", "SYSTEM").

        { "alias_name": ".",            "target_command": "start -p .",                        "description": "\uD83D\uDCC2 Open current folder in file manager",           "command_type": "NAVIGATE" },
        { "alias_name": "..",           "target_command": "cd ..",                             "description": "↑ Go up one directory",                                      "command_type": "NAVIGATE" },
        { "alias_name": "...",          "target_command": "cd ../../",                         "description": "⬆⬆ Go up two directories",                                   "command_type": "NAVIGATE" },
        { "alias_name": "....",         "target_command": "cd ../../../",                      "description": "⬆⬆⬆ Go up three directories",                                "command_type": "NAVIGATE" },
        { "alias_name": "~",            "target_command": "cd $HOME",                          "description": "\uD83C\uDFE0 Go to home directory",                          "command_type": "NAVIGATE" },
        { "alias_name": "$",            "target_command": "cd $PROJ_WORKSPACE",                "description": "\uD83D\uDEE0\uFE0F  Go to workspace directory",              "command_type": "NAVIGATE" },
        { "alias_name": "gol",          "target_command": "cd $SOLUTION_BASE",                 "description": "\uD83D\uDFE7 Go to solution base path",                      "command_type": "NAVIGATE" },
        { "alias_name": "gob",          "target_command": "cd $BUILD_OUT",                     "description": "\uD83D\uDFEA Go to build output directory",                  "command_type": "NAVIGATE" },
        { "alias_name": "gor",          "target_command": "cd $SOURCE_BASE",                   "description": "\uD83D\uDFE5 Go to sources directory",                       "command_type": "NAVIGATE" },
        { "alias_name": "gos",          "target_command": "cd $SCRIPTS_BASE",                  "description": "\uD83D\uDFE6 Go to scripts directory",                       "command_type": "NAVIGATE" },
        { "alias_name": "goss",         "target_command": "cd $SCRIPTS_SOLUTION",              "description": "⚙\uFE0F  Go to the solution JSONs path",                     "command_type": "NAVIGATE" },
        { "alias_name": "log",          "target_command": "sln -l -c",                         "description": "\uD83D\uDCDD Show recent logs",                              "command_type": "UTILITY"  },
        { "alias_name": "showsln",      "target_command": "sln -p",                            "description": "\uD83D\uDCDC Show resolved solution JSON",                   "command_type": "UTILITY"  },
        { "alias_name": "showenv",      "target_command": "sln -e",                            "description": "\uD83D\uDD0E Show managed variables tables",                 "command_type": "UTILITY"  },
        { "alias_name": "showeditors",  "target_command": "edit -l",                           "description": "\uD83D\uDD0E Show all detected editors",                     "command_type": "UTILITY" },
        { "alias_name": "e",            "target_command": "edit -p",                           "description": "\uD83D\uDCDD Open file or path in default editor",           "command_type": "UTILITY" },
        { "alias_name": "j",            "target_command": "sln -j",                            "description": "\uD83E\uDD8B JSON pretty viewer",                            "command_type": "SYSTEM"   },
        { "alias_name": "ls",           "target_command": "/bin/ls --color=auto -F",           "description": "\uD83D\uDDC4\uFE0F List (short) using built-in 'ls",         "command_type": "SYSTEM"   },
        { "alias_name": "ll",           "target_command": "/bin/ls -la --color=auto -F",       "description": "\uD83D\uDDC4\uFE0F List (long) using built-in 'ls'",         "command_type": "SYSTEM"   },
        { "alias_name": "l",            "target_command": "lsd -g",                            "description": "\uD83D\uDDC4\uFE0F List files (fancy) using 'lsd'",          "command_type": "SYSTEM"   },
        { "alias_name": "exit",         "target_command": "quit",                              "description": "Exit the shell",                                             "command_type": "SYSTEM",  "hidden": true },
        { "alias_name": "x",            "target_command": "quit",                              "description": "Exit the shell",                                             "command_type": "SYSTEM",  "hidden": true },
        { "alias_name": "q",            "target_command": "quit",                              "description": "Exit the shell",                                             "command_type": "SYSTEM",  "hidden": true },
        { "alias_name": "cls",          "target_command": "clear",                             "description": "Clear screen",                                               "command_type": "SYSTEM",  "hidden": true },
        { "alias_name": "cln",          "target_command": "clear",                             "description": "Clear screen",                                               "command_type": "SYSTEM",  "hidden": true },
        { "alias_name": "gs",           "target_command": "git status",                        "description": "Git status",                                                 "command_type": "GIT"      },
        { "alias_name": "ga",           "target_command": "git add .",                         "description": "Git add all",                                                "command_type": "GIT"      },
        { "alias_name": "gc",           "target_command": "git commit -m",                     "description": "Git commit",                                                 "command_type": "GIT"      },
        { "alias_name": "gp",           "target_command": "git push",                          "description": "Git push",                                                   "command_type": "GIT"      }
    ],

    "interactive_commands": [

        // List of commands that require interactive terminal behavior.
        // These commands typically control the terminal screen, use input prompts,
        // or produce continuous output unsuitable for standard command capture.

        "apt*",
        "bash",
        "zsh",
        "btop",
        "bat",
        "cat",
        "clear",
        "dnf*",
        "htop",
        "less",
        "nano",
        "pico",
        "sudo",
        "top",
        "vi",
        "vim"
    ],

    "ansi_codes": {

        // ANSI color and style codes following Colorama-style naming.
        // These codes are useful for CLI rendering, logging, and text decoration.

        // Screen control
        "SCREEN_CLS"               : "\u001b[H\u001b[2J",
        "SCREEN_CLS_SB"            : "\u001b[2J\u001b[3J\u001b[H",

        // Text style (Colorama: Style)
        "STYLE_RESET_ALL"           : "\u001b[0m",
        "STYLE_BRIGHT"              : "\u001b[1m",
        "STYLE_DIM"                 : "\u001b[2m",
        "STYLE_ITALIC"              : "\u001b[3m",
        "STYLE_UNDERLINE"           : "\u001b[4m",
        "STYLE_BLINK"               : "\u001b[5m",
        "STYLE_INVERT"              : "\u001b[7m",
        "STYLE_HIDDEN"              : "\u001b[8m",
        "STYLE_STRIKETHROUGH"       : "\u001b[9m",

        // Foreground colors (Colorama: Fore)
        "FORE_BLACK"               : "\u001b[30m",
        "FORE_RED"                 : "\u001b[31m",
        "FORE_GREEN"               : "\u001b[32m",
        "FORE_YELLOW"              : "\u001b[33m",
        "FORE_BLUE"                : "\u001b[34m",
        "FORE_MAGENTA"             : "\u001b[35m",
        "FORE_CYAN"                : "\u001b[36m",
        "FORE_WHITE"               : "\u001b[37m",
        "FORE_RESET"               : "\u001b[39m",

        // Background colors (Colorama: Back)
        "BACK_BLACK"               : "\u001b[40m",
        "BACK_RED"                 : "\u001b[41m",
        "BACK_GREEN"               : "\u001b[42m",
        "BACK_YELLOW"              : "\u001b[43m",
        "BACK_BLUE"                : "\u001b[44m",
        "BACK_MAGENTA"             : "\u001b[45m",
        "BACK_CYAN"                : "\u001b[46m",
        "BACK_WHITE"               : "\u001b[47m",
        "BACK_RESET"               : "\u001b[49m",

        // Bright foreground colors
        "FORE_LIGHTBLACK_EX"      : "\u001b[90m",
        "FORE_LIGHTRED_EX"        : "\u001b[91m",
        "FORE_LIGHTGREEN_EX"      : "\u001b[92m",
        "FORE_LIGHTYELLOW_EX"     : "\u001b[93m",
        "FORE_LIGHTBLUE_EX"       : "\u001b[94m",
        "FORE_LIGHTMAGENTA_EX"    : "\u001b[95m",
        "FORE_LIGHTCYAN_EX"       : "\u001b[96m",
        "FORE_LIGHTWHITE_EX"      : "\u001b[97m",

        // Bright background colors
        "BACK_LIGHTBLACK_EX"      : "\u001b[100m",
        "BACK_LIGHTRED_EX"        : "\u001b[101m",
        "BACK_LIGHTGREEN_EX"      : "\u001b[102m",
        "BACK_LIGHTYELLOW_EX"     : "\u001b[103m",
        "BACK_LIGHTBLUE_EX"       : "\u001b[104m",
        "BACK_LIGHTMAGENTA_EX"    : "\u001b[105m",
        "BACK_LIGHTCYAN_EX"       : "\u001b[106m",
        "BACK_LIGHTWHITE_EX"      : "\u001b[107m"
    },

    "path_completion_rules": {

        // Mapping of shell-like commands to their completion behavior.
        // Commands supporting path completion specify whether only directories
        // should be suggested when completing arguments.

        "alias"           : { "path_completion": false                        },
        "apt"             : { "path_completion": false                        },
        "cat"             : { "path_completion": true , "only_dirs": false    },
        "e"               : { "path_completion": true , "only_dirs": false    }, // Package 'edit' command alias
        "j"               : { "path_completion": true , "only_dirs": false,   "filter_glob": ["*.jsonc", "*.json"]  },
        "cd"              : { "path_completion": true , "only_dirs": true     },
        "clear"           : { "path_completion": false                        },
        "cmake"           : { "path_completion": true , "only_dirs": true     },
        "cp"              : { "path_completion": true , "only_dirs": false    },
        "curl"            : { "path_completion": false                        },
        "dnf"             : { "path_completion": false                        },
        "echo"            : { "path_completion": false                        },
        "export"          : { "path_completion": false                        },
        "git"             : { "path_completion": false                        },
        "gunzip"          : { "path_completion": true , "only_dirs": false    },
        "gzip"            : { "path_completion": true , "only_dirs": false    },
        "head"            : { "path_completion": true , "only_dirs": false    },
        "help"            : { "path_completion": false                        },
        "history"         : { "path_completion": false                        },
        "less"            : { "path_completion": true , "only_dirs": false    },
        "ls"              : { "path_completion": true , "only_dirs": false    },
        "make"            : { "path_completion": true , "only_dirs": false,   "allowed_names": ["Makefile", "GNUmakefile", "makefile"] },
        "mkdir"           : { "path_completion": true , "only_dirs": true     },
        "more"            : { "path_completion": true , "only_dirs": false    },
        "mv"              : { "path_completion": true , "only_dirs": false    },
        "nano"            : { "path_completion": true , "only_dirs": false    },
        "ninja"           : { "path_completion": true , "only_dirs": false    },
        "pip"             : { "path_completion": false                        },
        "pip3"            : { "path_completion": false                        },
        "ping"            : { "path_completion": false                        },
        "popd"            : { "path_completion": false                        },
        "prettier"        : { "path_completion": false                        },
        "pushd"           : { "path_completion": true , "only_dirs": true     },
        "python"          : { "path_completion": true , "only_dirs": false,   "filter_glob": "*.py" },
        "python3"         : { "path_completion": true , "only_dirs": false,   "filter_glob": "*.py" },
        "pytest"          : { "path_completion": true , "only_dirs": false    },
        "rm"              : { "path_completion": true , "only_dirs": false    },
        "rmdir"           : { "path_completion": true , "only_dirs": true     },
        "set"             : { "path_completion": false                        },
        "stat"            : { "path_completion": true , "only_dirs": false    },
        "tail"            : { "path_completion": true , "only_dirs": false    },
        "tar"             : { "path_completion": true , "only_dirs": false    },
        "touch"           : { "path_completion": true , "only_dirs": false    },
        "traceroute"      : { "path_completion": false                        },
        "unzip"           : { "path_completion": true , "only_dirs": false    },
        "unalias"         : { "path_completion": false                        },
        "vi"              : { "path_completion": true , "only_dirs": false    },
        "vim"             : { "path_completion": true , "only_dirs": false    },
        "wc"              : { "path_completion": true , "only_dirs": false    },
        "wget"            : { "path_completion": false                        },
        "yum"             : { "path_completion": false                        },
        "zip"             : { "path_completion": true , "only_dirs": false    }
    },

    "dynamic_path_styles": {

        // Default background for all completions (light gray tone)
        "background": "d1d1d1",

        // Styles for each token category used in completion rendering
        "tokens": {
            // Executables (e.g. system commands)
            "executable": "fg:#228b22 bold",         // Forest green text
            // Built-in commands defined via do_<name>()
            "builtins": "fg:#1e90ff bold",           // Dodger blue
            // CLI command names from plugins / dynamic registry
            "cli-commands": "fg:#cc7a00 italic",     // Amber/orange italic
            // Aliases (shortcut commands)
            "aliases": "fg:#6666cc italic",          // Soft lavender
            // Regular files
            "file": "fg:#666666",                    // Medium gray
            // Directories
            "directory": "fg:#0088cc bold",          // Cool cyan-blue
            // Passive system messages (like [no matches found])
            "completion-meta": "fg:#888888 italic",  // Subtle gray
            // Alerts or user warnings
            "alert": "fg:#aa0000 bold",              // Soft red
            // Hodden (starts with '.')
            "hidden-file-path": "fg:#666666 italic"  // softer gray, clearly visible on light background
        }
    },

    "terminal_icons": {

        // Source Code
        ".py"                : { "icon": "\ue606", "description": "Python source file",      "color": "FORE_YELLOW"          },
        ".c"                 : { "icon": "\ue61e", "description": "C source file",           "color": "BACK_LIGHTBLUE_EX"    },
        ".cpp"               : { "icon": "\ue61d", "description": "C++ source file",         "color": "BACK_LIGHTBLUE_EX"    },
        ".h"                 : { "icon": "\ue61e", "description": "C/C++ header",            "color": "BACK_LIGHTBLUE_EX"    },
        ".hpp"               : { "icon": "\ue61d", "description": "C++ header",              "color": "BACK_LIGHTBLUE_EX"    },
        ".java"              : { "icon": "\ue256", "description": "Java source file",        "color": "FORE_RED"             },
        ".js"                : { "icon": "\ue74e", "description": "JavaScript file",         "color": "FORE_YELLOW"          },
        ".ts"                : { "icon": "\ue628", "description": "TypeScript file",         "color": "FORE_CYAN"            },
        ".go"                : { "icon": "\ue627", "description": "Go source file",          "color": "FORE_CYAN"            },
        ".rs"                : { "icon": "\ue7a8", "description": "Rust source file",        "color": "FORE_RED"             },
        ".swift"             : { "icon": "\ue755", "description": "Swift source file",       "color": "FORE_MAGENTA"         },

        // Scripts & Shell
        ".sh"                : { "icon": "\uf489", "description": "Shell script",            "color": "FORE_GREEN"           },
        ".bash"              : { "icon": "\uf489", "description": "Bash script",             "color": "FORE_GREEN"           },
        ".zsh"               : { "icon": "\uf489", "description": "Zsh script",              "color": "FORE_GREEN"           },
        ".ps1"               : { "icon": "\ue795", "description": "PowerShell script",       "color": "FORE_CYAN"            },

        // Config & Markup
        ".json"              : { "icon": "\ue60b", "description": "JSON file",               "color": "FORE_CYAN"            },
        ".jsonc"             : { "icon": "\ue60b", "description": "JSON with comments",      "color": "FORE_CYAN"            },
        ".yaml"              : { "icon": "\ue615", "description": "YAML config file",        "color": "FORE_CYAN"            },
        ".yml"               : { "icon": "\ue615", "description": "YAML config file",        "color": "FORE_CYAN"            },
        ".toml"              : { "icon": "\ue615", "description": "TOML config file",        "color": "FORE_CYAN"            },
        ".ini"               : { "icon": "\ue615", "description": "INI config file",         "color": "FORE_CYAN"            },
        ".conf"              : { "icon": "\ue615", "description": "Configuration file",      "color": "FORE_CYAN"            },
        ".env"               : { "icon": "\uf4a2", "description": "Environment settings",    "color": "FORE_GREEN"           },

        // Markup & Docs
        ".md"                : { "icon": "\uf48a", "description": "Markdown file",           "color": "FORE_BLUE"            },
        ".txt"               : { "icon": "\uf49e", "description": "Text file",               "color": "FORE_LIGHTBLACK_EX"   },
        ".rst"               : { "icon": "\ue5da", "description": "reStructuredText",        "color": "FORE_BLUE"            },
        ".html"              : { "icon": "\ue60e", "description": "HTML document",           "color": "FORE_MAGENTA"         },
        ".xml"               : { "icon": "\ufabf", "description": "XML document",            "color": "FORE_MAGENTA"         },
        ".pdf"               : { "icon": "\uf724", "description": "PDF document",            "color": "FORE_RED"             },

        // Logs
        ".log"               : { "icon": "\uf4cd", "description": "Log file",                "color": "FORE_LIGHTBLACK_EX"   },

        // Archives
        ".zip"               : { "icon": "\uf490", "description": "ZIP archive",             "color": "FORE_MAGENTA"         },
        ".tar"               : { "icon": "\uf490", "description": "TAR archive",             "color": "FORE_MAGENTA"         },
        ".gz"                : { "icon": "\uf490", "description": "GZ archive",              "color": "FORE_MAGENTA"         },
        ".bz2"               : { "icon": "\uf490", "description": "BZIP2 archive",           "color": "FORE_MAGENTA"         },
        ".7z"                : { "icon": "\uf490", "description": "7-Zip archive",           "color": "FORE_MAGENTA"         },

        // Media
        ".jpg"               : { "icon": "\uf03e", "description": "JPEG image",              "color": "FORE_YELLOW"          },
        ".jpeg"              : { "icon": "\uf03e", "description": "JPEG image",              "color": "FORE_YELLOW"          },
        ".png"               : { "icon": "\uf03e", "description": "PNG image",               "color": "FORE_YELLOW"          },
        ".gif"               : { "icon": "\uf03e", "description": "GIF image",               "color": "FORE_YELLOW"          },
        ".svg"               : { "icon": "\uf81f", "description": "SVG vector image",        "color": "FORE_CYAN"            },
        ".mp3"               : { "icon": "\uf001", "description": "MP3 audio file",          "color": "FORE_MAGENTA"         },
        ".wav"               : { "icon": "\uf001", "description": "WAV audio file",          "color": "FORE_MAGENTA"         },
        ".mp4"               : { "icon": "\uf03d", "description": "MP4 video file",          "color": "FORE_BLUE"            },
        ".mkv"               : { "icon": "\uf03d", "description": "MKV video file",          "color": "FORE_BLUE"            },

        // Compiled
        ".exe"               : { "icon": "\ue70f", "description": "Windows executable",      "color": "FORE_RED"             },
        ".out"               : { "icon": "\ue795", "description": "Compiled binary",         "color": "FORE_RED"             },
        ".class"             : { "icon": "\ue256", "description": "Java class file",         "color": "FORE_LIGHTBLACK_EX"   },
        ".o"                 : { "icon": "\ue795", "description": "Object file",             "color": "FORE_LIGHTBLACK_EX"   },

        // Special filenames
        "Makefile"           : { "icon": "\ue761", "description": "Makefile",                "color": "FORE_CYAN"            },
        "Dockerfile"         : { "icon": "\ue790", "description": "Dockerfile",              "color": "FORE_BLUE"            },
        "LICENSE"            : { "icon": "\uf016", "description": "License file",            "color": "white"                },
        "README"             : { "icon": "\uf7dd", "description": "README file",             "color": "FORE_BLUE"            },

        // Fallbacks
        "default_dir"        : { "icon": "\uf115", "description": "Directory",               "color": "FORE_BLUE"            },
        "default_file"       : { "icon": "\uf016", "description": "Generic file",            "color": "white"                }
    },

    "editors_fallback_search_paths": [

        // Fallback search paths for locating editors not found in the system's executable PATH.
        // Each entry may include:
        // - "path": A string path to search.
        // - "wsl_path": true if the path refers to a WSL-mounted Windows location (e.g., /mnt/c/...),
        //               which will only be searched when running inside WSL and the target alias ends with '.exe'.

        { "path": "/snap/bin"                                                                   },
        { "path": "/var/lib/flatpak/exports/bin"                                                },
        { "path": "~/.var/app"                                                                  },
        { "path":  "~/bin"                                                                      },
        { "path": "/mnt/c/Program Files/Sublime Text",                       "wsl_path": true   },
        { "path": "/mnt/c/Program Files/Microsoft VS Code",                  "wsl_path": true   },
        { "path": "$WSL_HOMEPATH/AppData/Local/Programs/Microsoft VS Code",  "wsl_path": true   },
        { "path": "$WSL_C_MOUNT/Program Files (x86)/Notepad++",              "wsl_path": true   },
        { "path": "$WSL_C_MOUNT/Program Files/Notepad++",                    "wsl_path": true   },
        { "path": "$WSL_C_MOUNT/Windows",                                    "wsl_path": true   }
    ],

    "searched_editors": [

        // A list of supported editors that will be searched for during startup.
        // Each object should define:
        // - "name": A unique identifier for the editor.
        // - "aliases": A list of possible executable names to check (e.g., commands or symlinks).
        // - "type": "terminal" or "gui", used to categorize the editor.
        // - "executable": Preferred alias name used when launching the editor.

        { "name": "vi",           "aliases": ["vi", "vii"],                               "type": "terminal", "executable": "vi",           "args": [] },
        { "name": "vim",          "aliases": ["vim", "vim.basic", "vim.tiny"],            "type": "terminal", "executable": "vim",          "args": ["-u", "NONE"] },
        { "name": "gvim",         "aliases": ["gvim", "gvim.exe"],                        "type": "gui",      "executable": "gvim",         "args": [] },
        { "name": "nano",         "aliases": ["nano"],                                    "type": "terminal", "executable": "nano",         "args": ["--ignorercfiles"] },
        { "name": "pico",         "aliases": ["pico"],                                    "type": "terminal", "executable": "pico",         "args": [] },
        { "name": "emacs",        "aliases": ["emacs"],                                   "type": "terminal", "executable": "emacs",        "args": ["-nw"] },
        { "name": "micro",        "aliases": ["micro"],                                   "type": "terminal", "executable": "micro",        "args": [] },
        { "name": "gedit",        "aliases": ["gedit"],                                   "type": "gui",      "executable": "gedit",        "args": ["--new-window"] },
        { "name": "leafpad",      "aliases": ["leafpad"],                                 "type": "gui",      "executable": "leafpad",      "args": [] },
        { "name": "mousepad",     "aliases": ["mousepad"],                                "type": "gui",      "executable": "mousepad",     "args": [] },
        { "name": "pluma",        "aliases": ["pluma"],                                   "type": "gui",      "executable": "pluma",        "args": [] },
        { "name": "atom",         "aliases": ["atom", "Atom.exe"],                        "type": "gui",      "executable": "atom",         "args": ["--new-window"] },
        { "name": "bluefish",     "aliases": ["bluefish"],                                "type": "gui",      "executable": "bluefish",     "args": [] },
        { "name": "kate",         "aliases": ["kate"],                                    "type": "gui",      "executable": "kate",         "args": ["--new"] },
        { "name": "xed",          "aliases": ["xed"],                                     "type": "gui",      "executable": "xed",          "args": [] },
        { "name": "sublime_text", "aliases": ["subl", "sublime_text", "subl.exe"],        "type": "gui",      "executable": "subl",         "args": [] },
        { "name": "vscode",       "aliases": ["code", "code-insiders", "Code.exe"],       "type": "gui",      "executable": "code",         "args": ["--reuse-window"] },
        { "name": "notepad++",    "aliases": ["notepad++.exe"],                           "type": "gui",      "executable": "notepad++.exe","args": [] },
        { "name": "notepad",      "aliases": ["notepad.exe"],                             "type": "gui",      "executable": "notepad",      "args": [] }
  ]
}