/*
    Bootstrap exam,ple script
    -------------------------

    Note:
    This script is formatted as JSON, where q JSON preprocessor remove any comments before execution.
*/

{
	"project_name": "Our Project",
	"log_file": "log.txt",
	"workspace": "~/projects/af_install/ws",
	// Steps:
	"steps": [
		{
			"description": "Setting HTTP PROXY environment variable",
			"method": "env_set",
			"arguments": {
				"name": "http_proxy",
				"value": "http://proxy-dmz.intel.com:911"
			}
		},
		{
			"description": "Setting HTTPS PROXY environment variable",
			"method": "env_set",
			"arguments": {
				"name": "https_proxy",
				"value": "http://proxy-dmz.intel.com:911"
			}
		},
		{
			"description": "Validating Intel developer tool ('dt') version 2.0.810 or grater",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "dt",
				"arguments": "version",
				"cwd": "$HOME/bin"
			}
		},
		{
			"description": "Validating Python version 3.8.0 or grater",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "python",
				"arguments": "--version",
				"cwd": "$HOME/.pyenv/shims",
				"expected_response": "Python 3.8.0",
				"allow_greater_decimal": true
			}
		},
		{
			"description": "Validating git",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "git",
				"arguments": "--version"
			}
		},
		{
			"description": "Validating ninja build",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "ninja",
				"arguments": "--version"
			}
		},
		{
			"description": "Validating cmake",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "cmake",
				"arguments": "--version"
			}
		},
		{
			"description": "Validating device tree compiled ('dtc')",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "dtc",
				"arguments": "--version"
			}
		},
		{
			"description": "Retrieve git token using Intel developer tool ('dt')",
			"method": "shell_execute",
			"arguments": {
				"command": "dt",
				"arguments": "github print-token",
				"cwd": "$HOME/bin"
			},
			// Store the executed command response in key name 'dt_token'
			"response_store_key": "dt_token"
		},
		{
			"description": "Initialize the workspace",
			"method": "set_workspace",
			"arguments": {
				"start_fresh": false,
				"start_empty": false
			},
			// Store the executed command response in key name 'dt_token'
			"response_store_key": "dt_token"
		},
		{
			"description": "Create firmware sources path",
			"method": "path_create",
			"arguments": {
				"path": "userspace/fw"
			}
		},
		{
			"description": "Create build system path",
			"method": "path_create",
			"arguments": {
				"path": "userspace/scripts"
			}
		},
		{
			"description": "Create build output path",
			"method": "path_create",
			"arguments": {
				"path": "build"
			}
		},
		{
			"description": "Creating Python virtual environment",
			"method": "py_venv_create",
			"arguments": {
				"venv_path": ".venv",
				"python_version": "python3.9",
				"python_command_path": "$HOME/.pyenv/shims/python3.9"
			}
		},
		{
			"description": "Updating Python PIP in virtual environment",
			"method": "py_venv_update_pip",
			"arguments": {
				"venv_path": ".venv"
			}
		},
		{
			"description": "Installing packages to virtual environment",
			"method": "py_venv_package_add",
			"arguments": {
				"venv_path": ".venv",
				"package_or_requirements": "colorama json5"
			}
		},
		{
			"description": "Cloning 'userspace'",
			"method": "git_clone_repo",
			"arguments": {
				"repo_url": "https://github.com/intel-innersource/firmware.ethernet.mountevans.imc.imc-userspace.git",
				"dest_repo_path": "userspace/fw",
				"timeout": 360
			}
		},
		{
			"description": "Switching 'userspace' revision",
			"method": "git_checkout_revision",
			"arguments": {
				"dest_repo_path": "userspace/fw",
				"revision": "origin"
			}
		}
	]
}
