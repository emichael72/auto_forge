/*
    Bootstrap exam,ple script
    -------------------------

    Note:
    This script is formatted as JSON, where q JSON preprocessor remove any comments before execution.
*/

{
	"project_name": "Our Project",
	"status_title_length": 60,
	"status_add_time_prefix": true,
	"status_new_line": false,
	// Default status will be shown in place, could be overridden in any step

	// Steps:
	"steps": [
		{
			"description": "Setting HTTP PROXY environment",
			"method": "env_set",
			"arguments": {
				"name": "http_proxy",
				"value": "http://proxy-dmz.intel.com:911"
			}
		},
		{
			"description": "Setting HTTPS PROXY environment",
			"method": "env_set",
			"status_new_line": true,
			"arguments": {
				"name": "https_proxy",
				"value": "http://proxy-dmz.intel.com:911"
			}
		},
		{
			"description": "Looking for 'dt' 2.0.810 or grater",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "dt",
				"arguments": "version",
				"cwd": "$HOME/bin"
			}
		},
		{
			"description": "Looking for 'python' 3.8.0 or grater",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "python",
				"arguments": "--version",
				"cwd": "$HOME/.pyenv/shims",
				"expected_response": "Python 3.8.0",
				"allow_greater_decimal": true
			}
		},
		{
			"description": "Looking for 'git'",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "git",
				"arguments": "--version"
			}
		},
		{
			"description": "Looking for 'ninja'",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "ninja",
				"arguments": "--version"
			}
		},
		{
			"description": "Looking for 'cmake'",
			"method": "validate_prerequisite",
			"arguments": {
				"command": "cmake",
				"arguments": "--version"
			}
		},
		{
			"description": "Looking for 'dtc'",
			"method": "validate_prerequisite",
			"status_new_line": true,
			"arguments": {
				"command": "dtc",
				"arguments": "--version"
			}
		},
		{
			"description": "Getting git access token using 'dt'",
			"method": "shell_execute",
			"status_new_line": true,
			"arguments": {
				"command": "dt",
				"arguments": "github print-token",
				"cwd": "$HOME/bin"
			},
			// Store the executed command response in key name 'dt_token'
			"response_store_key": "dt_token"
		},
		{
			"description": "Initializing workspace path",
			"method": "set_workspace",
			"arguments": {
				"start_fresh": false,
				"start_empty": false
			},
			// Store the executed command response in key name 'dt_token'
			"response_store_key": "dt_token"
		},
		{
			"description": "Creating firmware sources path",
			"method": "path_create",
			"arguments": {
				"path": "userspace/fw"
			}
		},
		{
			"description": "Creating build system path",
			"method": "path_create",
			"arguments": {
				"path": "userspace/scripts"
			}
		},
		{
			"description": "Creating build output path",
			"method": "path_create",
			"arguments": {
				"path": "build"
			}
		},
		{
			"description": "Creating Python virtual environment",
			"method": "py_venv_create",
			"status_new_line": true,
			"arguments": {
				"venv_path": ".venv",
				"python_version": "python3.9",
				"python_command_path": "$HOME/.pyenv/shims/python3.9"
			}
		},
		{
			"description": "Updating PIP in virtual environment",
			"method": "py_venv_update_pip",
			"status_new_line": true,
			"arguments": {
				"venv_path": ".venv"
			}
		},
		{
			"description": "Installing Python packages",
			"method": "py_venv_package_add",
			"status_new_line": true,
			"arguments": {
				"venv_path": ".venv",
				"package_or_requirements": "colorama json5 jsonschema tabulate psutil toml gitpython jsonpath-ng cmd2"
			}
		},
		{
			"description": "Installing AutoForge in local environment",
			"method": "py_venv_package_add",
			"status_new_line": true,
			"arguments": {
				"venv_path": ".venv",
				"package_or_requirements": "git+https://github.com/emichael72/auto_forge.git"
			}
		},
		{
			"description": "Cloning 'userspace'",
			"method": "git_clone_repo",
			"status_new_line": true,
			"arguments": {
				"repo_url": "https://github.com/intel-innersource/firmware.ethernet.mountevans.imc.imc-userspace.git",
				"dest_repo_path": "userspace/fw",
				"timeout": 360
			}
		},
		{
			"description": "Switching 'userspace' revision",
			"method": "git_checkout_revision",
			"arguments": {
				"dest_repo_path": "userspace/fw",
				"revision": "origin"
			}
		},
		{
			"description": "Downloading the Zephyr SDK",
			"method": "download_file",
			"status_step_disabled": true,
			"arguments": {
				"url": "https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.8/zephyr-sdk-0.16.8_linux-x86_64.tar.xz",
				"proxy": "http://proxy-dmz.intel.com:911",
				"local_path": "~/test",
				"delete_local": true
			}
		}
	]
}
