/*
    AutoForge solution configuration file
    -------------------------------------
    Use sln -t to view a full tutorial on this file structure.

    Note: This file uses JSONC â€” an extended JSON format that supports inline comments and multi-line strings.
    This allows for improved readability and documentation, but it is not valid standard JSON.
    Parsers consuming this file must support JSONC or preprocess it accordingly.

*/

{
    // Solutions
    "solutions": [
        {
            "name": "userspace",
            "description": "Userspace CMake port",
            "create_environment_sequence": "<$include>environment.jsonc",
            "aliases": "<$include>aliases.jsonc",
            // Include additional project specific commands
            "default_editor": "*code*",
            // Editor selector: index (1-based) or name pattern with wildcards (e.g., "*sublime*"
            "variables": "<$include>variables.jsonc",
            "schema": "1.0",
            "build_path": "$BUILD_OUT",
            "workspace": "$PROJ_WORKSPACE",
            // Toolchains used by this solution
            "tool_chains": [
                {
                    "name": "Arm GNU AArch64 Cross Toolchain",
                    // The following assumes that the Arm GNU AArch64 toolchain is available under the
                    // AutoForge persistent path, typically located at '$HOME/.auto_forge'.
                    "platform": "linux",
                    "description": "https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads",
                    "architecture": "aarch64",
                    "build_system": "cmake",
                    "tool_prefix": "aarch64-none-linux-gnu-",
                    "tool_base_path": "$AF_TOOL_CHAINS/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu",
                    "tool_bins_path": "<$ref_tool_base_path>/bin",
                    "tool_sysroot": "<$ref_tool_base_path>/aarch64-none-linux-gnu/libc",
                    // Sysroot is provided by Arm
                    "required_tools": {
                        "cmake": {
                            "path": "cmake",
                            "version": ">=3.20",
                            "help": "builder/cmake.md",
                            "options": [
                                "-G",
                                "Ninja",
                                "-DCMAKE_SYSTEM_NAME=Linux",
                                "-DCMAKE_SYSTEM_PROCESSOR=aarch64",
                                "-DCMAKE_C_COMPILER=<$ref_tool_bins_path>/<$ref_tool_prefix>gcc",
                                "-DCMAKE_CXX_COMPILER=<$ref_tool_bins_path>/<$ref_tool_prefix>g++",
                                "-DCMAKE_SYSROOT=<$ref_tool_sysroot>",
                                "-DCMAKE_FIND_ROOT_PATH_MODE_PROGRAM=NEVER",
                                "-DCMAKE_FIND_ROOT_PATH_MODE_INCLUDE=ONLY"
                            ]
                        },
                        "gcc": {
                            "path": "<$ref_tool_bins_path>/<$ref_tool_prefix>gcc",
                            "version": ">=14.2",
                            "help": "builder/arm_cross_gcc.md"
                        },
                        "ninja": {
                            "path": "ninja",
                            "version": ">=1.10",
                            "help": "builder/ninja.md"
                        }
                    }
                }
            ],
            // Projects
            "projects": [
                {
                    "name": "zephyr_build",
                    "description": "ARM64 compilation of the userspace project.",
                    "tool_chain": "<$ref_solutions[].tool_chains[Arm GNU AArch64 Cross Toolchain]>",
                    // Per-project configuration
                    "configurations": [
                        {
                            "name": "debug",
                            "build_path": "<$ref_solutions[].build_path>/<$ref_projects[].name>/<$ref_projects[].tool_chain.architecture>/<$ref_name>",
                            "menu_command": {
                                "name": "usd",
                                "description": "\uD83D\uDD28 Build 'userspace' <$ref_projects[].name>/<$ref_name> for <$ref_projects[].tool_chain.architecture>"
                            },
                            "execute_from": "$SOURCE_BASE/userspace",
                            "clean": "cmake --build <$ref_build_path> --target clean",
                            "compiler_options": [
                                "-S .",
                                "-B <$ref_build_path>",
                                "-DCMAKE_BUILD_TYPE=Debug",
                                "-DMMG=1",
                                "-DSOURCES_ROOT_PATH=$USERSPACE_MMG",
                                "-DDO_COMPILE_INFRA=1",
                                "-DZEPHYR_BUILD=1",
                                // Explicit debug flags
                                "-DCMAKE_C_FLAGS_DEBUG=-O0 -g3 -ggdb",
                                "-DCMAKE_CXX_FLAGS_DEBUG=-O0 -g3 -ggdb"
                            ],
                            "artifacts": [
                                "<$ref_build_path>/n_libs/logger/liblogger.a"
                            ],
                            "pre_build_steps": {
                            }
                        },
                        {
                            "name": "release",
                            "data": "<$derived_from_solutions[].projects[].configurations[debug]>",
                            "menu_command": {
                                "name": "usr",
                                "description": "\uD83D\uDD28 Build 'userspace' <$ref_projects[].name>/<$ref_name> for <$ref_projects[].tool_chain.architecture>"
                            },
                            "compiler_options": [
                                "-S .",
                                "-B <$ref_build_path>",
                                "-DCMAKE_BUILD_TYPE=Release",
                                "-DMMG=1",
                                "-DSOURCES_ROOT_PATH=$USERSPACE_MMG",
                                "-DDO_COMPILE_INFRA=1",
                                "-DZEPHYR_BUILD=1",
                                // Explicit release optimization flags
                                "-DCMAKE_C_FLAGS_RELEASE=-O3 -DNDEBUG",
                                "-DCMAKE_CXX_FLAGS_RELEASE=-O3 -DNDEBUG"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}